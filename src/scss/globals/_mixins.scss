@use './colors' as *;
@use './variables' as *;
@use './functions' as *;
@use 'sass:math';

$animation-duration: 0.5s;
$animation-timing-function: ease-in-out;

@mixin max-size($width) {
  @media (width <= $width) {
    @content;
  }
}

@mixin between-size($maxWidth, $minWidth) {
  @media ($maxWidth <= width <= $minWidth) {
    @content;
  }
}

@mixin min-size($width) {
  @media (width >= $width) {
    @content;
  }
}

@mixin animation($name, $duration: $animation-duration, $timing: ease-in-out) {
  animation: $name $duration $timing forwards;

  @media (prefers-reduced-motion: reduce) {
    #{&} {
      animation: none !important;
    }
  }
}

@mixin transition($what: all, $time: 0.3s, $how: ease-in-out) {
  @media (prefers-reduced-motion: no-preference) {
    #{&} {
      transition: $what $time $how;
    }
  }
}

@mixin outline($color: $color-blue-30, $size: 2px, $offSet: 2px) {
  outline: $size solid $color;
  outline-offset: $offSet;
}

@mixin grid-template-column($size: 350px) {
  @if math.is-unitless($size) or math.unit($size) == 'px' {
    $size: rem($size);
  }

  grid-template-columns: repeat(auto-fit, minmax(min(100%, $size), 1fr));
}
